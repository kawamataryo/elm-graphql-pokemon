-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Pokemon.Object.PokemonAttack exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import Pokemon.InputObject
import Pokemon.Interface
import Pokemon.Object
import Pokemon.Scalar
import Pokemon.ScalarCodecs
import Pokemon.Union


{-| The fast attacks of this Pokémon
-}
fast :
    SelectionSet decodesTo Pokemon.Object.Attack
    -> SelectionSet (Maybe (List (Maybe decodesTo))) Pokemon.Object.PokemonAttack
fast object_ =
    Object.selectionForCompositeField "fast" [] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)


{-| The special attacks of this Pokémon
-}
special :
    SelectionSet decodesTo Pokemon.Object.Attack
    -> SelectionSet (Maybe (List (Maybe decodesTo))) Pokemon.Object.PokemonAttack
special object_ =
    Object.selectionForCompositeField "special" [] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)
