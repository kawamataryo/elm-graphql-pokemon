-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Pokemon.Object.Attack exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import Pokemon.InputObject
import Pokemon.Interface
import Pokemon.Object
import Pokemon.Scalar
import Pokemon.ScalarCodecs
import Pokemon.Union


{-| The name of this Pokémon attack
-}
name : SelectionSet (Maybe String) Pokemon.Object.Attack
name =
    Object.selectionForField "(Maybe String)" "name" [] (Decode.string |> Decode.nullable)


{-| The type of this Pokémon attack
-}
type_ : SelectionSet (Maybe String) Pokemon.Object.Attack
type_ =
    Object.selectionForField "(Maybe String)" "type" [] (Decode.string |> Decode.nullable)


{-| The damage of this Pokémon attack
-}
damage : SelectionSet (Maybe Int) Pokemon.Object.Attack
damage =
    Object.selectionForField "(Maybe Int)" "damage" [] (Decode.int |> Decode.nullable)
